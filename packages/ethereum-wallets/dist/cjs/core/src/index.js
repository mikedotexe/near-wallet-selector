"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockWallet = exports.allowOnlyLanguage = exports.translate = exports.serializeNep413 = exports.verifySignature = exports.verifyFullKeyBelongsToUser = exports.isCurrentBrowserSupported = exports.getActiveAccount = exports.waitFor = exports.EventEmitter = exports.setupWalletSelector = void 0;
var wallet_selector_js_1 = require("./lib/wallet-selector.js");
Object.defineProperty(exports, "setupWalletSelector", { enumerable: true, get: function () { return wallet_selector_js_1.setupWalletSelector; } });
var services_1 = require("./lib/services");
Object.defineProperty(exports, "EventEmitter", { enumerable: true, get: function () { return services_1.EventEmitter; } });
var helpers_1 = require("./lib/helpers");
Object.defineProperty(exports, "waitFor", { enumerable: true, get: function () { return helpers_1.waitFor; } });
Object.defineProperty(exports, "getActiveAccount", { enumerable: true, get: function () { return helpers_1.getActiveAccount; } });
Object.defineProperty(exports, "isCurrentBrowserSupported", { enumerable: true, get: function () { return helpers_1.isCurrentBrowserSupported; } });
Object.defineProperty(exports, "verifyFullKeyBelongsToUser", { enumerable: true, get: function () { return helpers_1.verifyFullKeyBelongsToUser; } });
Object.defineProperty(exports, "verifySignature", { enumerable: true, get: function () { return helpers_1.verifySignature; } });
Object.defineProperty(exports, "serializeNep413", { enumerable: true, get: function () { return helpers_1.serializeNep413; } });
var translate_1 = require("./lib/translate/translate");
Object.defineProperty(exports, "translate", { enumerable: true, get: function () { return translate_1.translate; } });
Object.defineProperty(exports, "allowOnlyLanguage", { enumerable: true, get: function () { return translate_1.allowOnlyLanguage; } });
var testUtils_1 = require("./lib/testUtils");
Object.defineProperty(exports, "mockWallet", { enumerable: true, get: function () { return testUtils_1.mockWallet; } });
